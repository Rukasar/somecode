Child To parent 

1] Create/Edit Contacts. And show Latest Contact Name on Account Description field.

	trigger ContactTrigger on Contcat(after Insert, after Update ,after undelete){
		
		Set<ID> accIDSet = new Set<ID>();
		for(Contact objCon : trigger.new){
			if(objCon.AccountId !=null)
			accIDSet.add(objCon.AccountId);
		}
		Map<ID,Account> accMap = new Map<ID,Account>([SELECT ID,Name, Description from Account Where ID IN: accIDSet]);
		if(accMap.isEmpty()){
		for(Contact objCon : trigger.new){
		if(accMap.containsKey(objCon.AccountId)){
		accMap.get(objCon.AccountId).Description=objCon.First Name+''+ ObjCon.LastName;
		}
		}
		Database.update(accMap.values(),false);
	}
	}
===============================================================================
2] Insert / Update Case. If Latest Case Status is “Escalated”, then Account SLA should be “Bronze” and Description ‘Gaya Kaam Se….’+ Case Number. 
	Keep it blank, otherwise.
	
	trigger caseTrigger On Case(after Insert, after update){
	Set<ID> accIDSet = new Set<ID>();
	for(Case objCase :trigger.new){
	if(objCase.AccountId !=null)
		accIDSet.add(objCase.AccountId);
	}
	Map<ID,Account> accMap =new Map<ID,Account>([SELECT ID, Name, Description,SLA__c from Account Where ID IN : accIDSet]);
	
	if(!accMap.isEmpty()){
	for(Case objCase :trigger.new){
	if(accMap.containsKey(objCase.AccountId)){
		if(objCase.Status=='Escalated'){
			accMap.get(objCase.AccountId).SLA__c ='Bronze';
			accMap.get(objCase.AccountId).Desccription = 'Gaya Kam Se...'objCase.CaseNumbber+;
		}
		else{
		accMap.get(objCase.AccountId).SLA__c ='';
			accMap.get(objCase.AccountId).Desccription = '';
		}
	}
	}
	Database.update(accMap.values(),false);
	}
	}
	===================================================================================
	3] Create / Update a Passport for an Applicant. If Passport Status is “Rejected”, then Applicant should be Eligible for Police Verification.
	
	trigger passTrigger on Passport__c(after Insert, after update){
	Set<Id> appIdSet =new Set<Id>();
	for(Passport__c objPass : trigger.new){
	if(objPass.Applicant__c !=null)
	appIdSet.add(objPass.Applicant__c);
	}
	Map<ID,Applicant__c> appMap =new Map<ID,Applicant__c>([Select Id, Police_Verification__c from Applicant__c where ID IN :appIdSet]);
	if(!appMap.IsEmpty()){
	for(Passport__c objPass : trigger.new){
	if(appMap.containsKey(objPass.Applicant__c)){
		if(objPass.Status__c=='Rejected'){
		appMap.get(objPass.Applicant__c).Police_Verification__c=True;
		}
		else{
		appMap.get(objPass.Applicant__c).Police_Verification__c=False;
		}
	}
	}
	Database.Update(appMap.values(),false);
	}
	}
	=====================================================================================
	
	trigger oppTrigger On Opportunity(after insert, after update){
	Set<ID> accIDSet = new Set<ID>();
	for(Opportunity objOpp : trigger.new){
	if(objOpp.AccountId != null)
		accIDSet(objOpp.AccountId);
	}
 	Map<ID,Account> accMap = new Map<ID,Account>([Select ID, SLA__c from Account where ID IN :accIDSet ]);
	
	if(!accMap.isEmpty()){
	for(Opportunity objOpp : trigger.new){
	if(accMap.containsKey(objOpp.AccountId)){
	if(objOpp.Amount<=8000 && objOpp.StageName=='Closed Lost'){
		accMap.get(objOpp.AccountId).SLA__c='Silver';
	}
	else{
		accMap.get(objOpp.AccountId).SLA__c='';
	}
	}
	}
	Database.update(accMap.values(),false);
	}
	}
	======================================================================================
	
2] If we create/Edit a Case having Priority as “High” or “Medium”, then Update its related Account Rating as “Hot”. Else nothing.

	trigger caseTrigger On Case(after insert, after update){
	Ser<ID> accIDSet =new Ser<ID>();
	for(Case objCase : trigger.new){
	if(objCase.AccountId !=null)
	accIDSet.add(objCase.AccountId);
	}
	Map<ID, Account> accMap = new Map<ID, Account>([Select ID,Name, Rating from Account Where ID  :accIDSet ]);
	
	if(accMap.isEmpty()){
	for(Case objCase : trigger.new){
	if(accMap.containsKey(objCase.AccountId)){
		if(objCase.Priority== 'High' || objCase.Priority=='Medium'){
		accMap.get(objCase.AccountId).Rating='Hot';
		}
		else{
		accMap.get(objCase.AccountId).Rating='';
		}
	}
	}
	Database.update(accMap.values(),false);
	}
	}
============================================
3] Create or Edit Address. If Address City = Pune, then Applicant should be eligible for Police Verification.

	tigger adrTrigger on Address__c (after Insert, after update){
	Set<ID> appIDSet =new Set<ID>();
	for(Address objAdr : trigger.new){
	if(objAdr.Applicant__c !=null)
	appIDSet.add(objAdr.Applicant__c);
	
	}
	Map<ID,Applicant__c> appMap =new  Map<ID,Applicant__c>([Select ID, Police_Verification__c from Applicant__c Where ID IN : appIDSet]);
	if(appMap.isEmpty()){
	for(Address objAdr : trigger.new){
	
	if(appMap.containsKey(objAdr.Applicant__c)){
		if(objAdr.City__c=='Pune'){
		appMap.get(objAdr.Applicant__c).Police_Verification__c =True;
		}
		else{
		appMap.get(objAdr.Applicant__c).Police_Verification__c ='';
		}
	}
	}
	Database.Update(accMap.values(),false);
	
	}
	}